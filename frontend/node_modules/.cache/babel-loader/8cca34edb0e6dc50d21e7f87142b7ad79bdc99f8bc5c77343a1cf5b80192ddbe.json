{"ast":null,"code":"var _jsxFileName = \"/Users/mihirjha/Documents/coding/begining/frontend/src/components/TestAttempt.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Typography, Button, Paper, CircularProgress, Alert } from '@mui/material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestAttempt() {\n  _s();\n  const {\n    testId\n  } = useParams();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitted, setSubmitted] = useState(false);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.get(`/api/v1/tests/${testId}/questions`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setQuestions(res.data);\n      } catch (err) {\n        setQuestions([]);\n      }\n      setLoading(false);\n    };\n    fetchQuestions();\n  }, [testId]);\n  const handleChange = (qid, value) => setAnswers({\n    ...answers,\n    [qid]: value\n  });\n  const handleSubmit = async () => {\n    setMessage('');\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`/api/v1/tests/${testId}/attempt`, {\n        answers: Object.entries(answers).map(([question_id, answer]) => ({\n          question_id,\n          answer\n        }))\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setSubmitted(true);\n      setMessage('Test submitted!');\n      setTimeout(() => navigate(`/tests/${testId}/results`), 1000);\n    } catch (err) {\n      setMessage('Submission failed');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n  if (submitted) return /*#__PURE__*/_jsxDEV(Alert, {\n    severity: \"success\",\n    children: \"Test submitted!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 2\n      },\n      children: \"Test Attempt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 2\n      },\n      children: questions.map(q => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: q.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), q.options && q.options.length > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          children: q.options.map(opt => /*#__PURE__*/_jsxDEV(Button, {\n            variant: answers[q.id] === opt.id ? 'contained' : 'outlined',\n            sx: {\n              mr: 1,\n              mb: 1\n            },\n            onClick: () => handleChange(q.id, opt.id),\n            children: opt.option_text\n          }, opt.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: answers[q.id] || '',\n          onChange: e => handleChange(q.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, q.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: message === 'Test submitted!' ? 'success' : 'error',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSubmit,\n      children: \"Submit Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(TestAttempt, \"dCJAMEZrQLCBP88wffzo5mDwToc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TestAttempt;\nvar _c;\n$RefreshReg$(_c, \"TestAttempt\");","map":{"version":3,"names":["React","useEffect","useState","Box","Typography","Button","Paper","CircularProgress","Alert","useParams","useNavigate","axios","jsxDEV","_jsxDEV","TestAttempt","_s","testId","questions","setQuestions","answers","setAnswers","loading","setLoading","submitted","setSubmitted","message","setMessage","navigate","fetchQuestions","token","localStorage","getItem","res","get","headers","Authorization","data","err","handleChange","qid","value","handleSubmit","post","Object","entries","map","question_id","answer","setTimeout","fileName","_jsxFileName","lineNumber","columnNumber","severity","children","variant","sx","mb","p","q","content","options","length","opt","id","mr","onClick","option_text","type","onChange","e","target","color","_c","$RefreshReg$"],"sources":["/Users/mihirjha/Documents/coding/begining/frontend/src/components/TestAttempt.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Typography, Button, Paper, CircularProgress, Alert } from '@mui/material';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function TestAttempt() {\n  const { testId } = useParams();\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [submitted, setSubmitted] = useState(false);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.get(`/api/v1/tests/${testId}/questions`, {\n          headers: { Authorization: `Bearer ${token}` }\n        });\n        setQuestions(res.data);\n      } catch (err) {\n        setQuestions([]);\n      }\n      setLoading(false);\n    };\n    fetchQuestions();\n  }, [testId]);\n\n  const handleChange = (qid, value) => setAnswers({ ...answers, [qid]: value });\n\n  const handleSubmit = async () => {\n    setMessage('');\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`/api/v1/tests/${testId}/attempt`, { answers: Object.entries(answers).map(([question_id, answer]) => ({ question_id, answer })) }, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      setSubmitted(true);\n      setMessage('Test submitted!');\n      setTimeout(() => navigate(`/tests/${testId}/results`), 1000);\n    } catch (err) {\n      setMessage('Submission failed');\n    }\n  };\n\n  if (loading) return <CircularProgress />;\n  if (submitted) return <Alert severity=\"success\">Test submitted!</Alert>;\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" sx={{ mb: 2 }}>Test Attempt</Typography>\n      <Paper sx={{ p: 2, mb: 2 }}>\n        {questions.map(q => (\n          <Box key={q.id} sx={{ mb: 2 }}>\n            <Typography variant=\"subtitle1\">{q.content}</Typography>\n            {/* For MCQ, render options as radio buttons; for short answer, use text field */}\n            {q.options && q.options.length > 0 ? (\n              <Box>\n                {q.options.map(opt => (\n                  <Button key={opt.id} variant={answers[q.id] === opt.id ? 'contained' : 'outlined'} sx={{ mr: 1, mb: 1 }} onClick={() => handleChange(q.id, opt.id)}>{opt.option_text}</Button>\n                ))}\n              </Box>\n            ) : (\n              <input type=\"text\" value={answers[q.id] || ''} onChange={e => handleChange(q.id, e.target.value)} />\n            )}\n          </Box>\n        ))}\n      </Paper>\n      {message && <Alert severity={message === 'Test submitted!' ? 'success' : 'error'}>{message}</Alert>}\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>Submit Test</Button>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}