{"ast":null,"code":"var _jsxFileName = \"/Users/mihirjha/Documents/coding/begining/frontend/src/components/TestAssign.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, MenuItem, Select, InputLabel, FormControl, Alert, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TestAssign() {\n  _s();\n  const {\n    testId\n  } = useParams();\n  const [students, setStudents] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [attemptLimit, setAttemptLimit] = useState(1);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch all students (for demo, fetch all users with role student)\n    const fetchStudents = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.get('/users', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setStudents(res.data.filter(u => u.role === 'student'));\n      } catch {\n        setStudents([]);\n      }\n    };\n    fetchStudents();\n  }, []);\n  const handleAssign = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`/api/v1/tests/${testId}/assign`, {\n        user_ids: selected,\n        start_time: startTime,\n        end_time: endTime,\n        attempt_limit: attemptLimit\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMessage('Test assigned!');\n      setTimeout(() => navigate('/tests'), 1000);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to assign test');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 600,\n      mx: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 2\n      },\n      children: \"Assign Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Students\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        multiple: true,\n        value: selected,\n        onChange: e => setSelected(e.target.value),\n        renderValue: selected => selected.map(id => {\n          const s = students.find(u => u.id === id);\n          return s ? s.name || s.email : id;\n        }).join(', '),\n        children: students.map(s => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: s.id,\n          children: s.name || s.email\n        }, s.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Start Time\",\n      type: \"datetime-local\",\n      value: startTime,\n      onChange: e => setStartTime(e.target.value),\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"End Time\",\n      type: \"datetime-local\",\n      value: endTime,\n      onChange: e => setEndTime(e.target.value),\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      InputLabelProps: {\n        shrink: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Attempt Limit\",\n      type: \"number\",\n      value: attemptLimit,\n      onChange: e => setAttemptLimit(e.target.value),\n      fullWidth: true,\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: message === 'Test assigned!' ? 'success' : 'error',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleAssign,\n      disabled: loading,\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 104\n      }, this) : 'Assign Test'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(TestAssign, \"48sN808jJoYCgffqlnS+b9X0y9Q=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TestAssign;\nvar _c;\n$RefreshReg$(_c, \"TestAssign\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","MenuItem","Select","InputLabel","FormControl","Alert","CircularProgress","axios","useParams","useNavigate","jsxDEV","_jsxDEV","TestAssign","_s","testId","students","setStudents","selected","setSelected","startTime","setStartTime","endTime","setEndTime","attemptLimit","setAttemptLimit","message","setMessage","loading","setLoading","navigate","fetchStudents","token","localStorage","getItem","res","get","headers","Authorization","data","filter","u","role","handleAssign","post","user_ids","start_time","end_time","attempt_limit","setTimeout","err","_err$response","_err$response$data","response","sx","maxWidth","mx","children","variant","mb","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","multiple","value","onChange","e","target","renderValue","map","id","s","find","name","email","join","TextField","label","type","InputLabelProps","shrink","severity","color","onClick","disabled","size","_c","$RefreshReg$"],"sources":["/Users/mihirjha/Documents/coding/begining/frontend/src/components/TestAssign.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, MenuItem, Select, InputLabel, FormControl, Alert, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nexport default function TestAssign() {\n  const { testId } = useParams();\n  const [students, setStudents] = useState([]);\n  const [selected, setSelected] = useState([]);\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [attemptLimit, setAttemptLimit] = useState(1);\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Fetch all students (for demo, fetch all users with role student)\n    const fetchStudents = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const res = await axios.get('/users', { headers: { Authorization: `Bearer ${token}` } });\n        setStudents(res.data.filter(u => u.role === 'student'));\n      } catch {\n        setStudents([]);\n      }\n    };\n    fetchStudents();\n  }, []);\n\n  const handleAssign = async () => {\n    setLoading(true);\n    setMessage('');\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`/api/v1/tests/${testId}/assign`, {\n        user_ids: selected,\n        start_time: startTime,\n        end_time: endTime,\n        attempt_limit: attemptLimit\n      }, { headers: { Authorization: `Bearer ${token}` } });\n      setMessage('Test assigned!');\n      setTimeout(() => navigate('/tests'), 1000);\n    } catch (err) {\n      setMessage(err.response?.data?.message || 'Failed to assign test');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Box sx={{ maxWidth: 600, mx: 'auto' }}>\n      <Typography variant=\"h4\" sx={{ mb: 2 }}>Assign Test</Typography>\n      <FormControl fullWidth sx={{ mb: 2 }}>\n        <InputLabel>Students</InputLabel>\n        <Select\n          multiple\n          value={selected}\n          onChange={e => setSelected(e.target.value)}\n          renderValue={selected => selected.map(id => {\n            const s = students.find(u => u.id === id);\n            return s ? s.name || s.email : id;\n          }).join(', ')}\n        >\n          {students.map(s => (\n            <MenuItem key={s.id} value={s.id}>{s.name || s.email}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <TextField label=\"Start Time\" type=\"datetime-local\" value={startTime} onChange={e => setStartTime(e.target.value)} fullWidth sx={{ mb: 2 }} InputLabelProps={{ shrink: true }} />\n      <TextField label=\"End Time\" type=\"datetime-local\" value={endTime} onChange={e => setEndTime(e.target.value)} fullWidth sx={{ mb: 2 }} InputLabelProps={{ shrink: true }} />\n      <TextField label=\"Attempt Limit\" type=\"number\" value={attemptLimit} onChange={e => setAttemptLimit(e.target.value)} fullWidth sx={{ mb: 2 }} />\n      {message && <Alert severity={message === 'Test assigned!' ? 'success' : 'error'}>{message}</Alert>}\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAssign} disabled={loading}>{loading ? <CircularProgress size={24} /> : 'Assign Test'}</Button>\n    </Box>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}