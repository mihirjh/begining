{"ast":null,"code":"var _jsxFileName = \"/Users/mihirjha/Documents/coding/begining/frontend/src/components/BulkUploadModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Box, Alert, LinearProgress } from '@mui/material';\nimport axios from 'axios';\n\n// Set up axios base URL (no CORS/security settings)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://127.0.0.1:5000/';\nexport default function BulkUploadModal({\n  open,\n  onClose,\n  onUploaded\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setResult(null);\n    setError('');\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    setLoading(true);\n    setError('');\n    setResult(null);\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const token = localStorage.getItem('token');\n      const res = await axios.post('/api/v1/questions/bulk-upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: token ? `Bearer ${token}` : ''\n        }\n      });\n      setResult(res.data);\n      onUploaded();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Bulk upload failed');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Bulk Upload Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mb: 2\n        },\n        children: \"Upload a CSV file with columns: subject_id, topic_id, question_type, content, difficulty, explanation, options (as JSON or semicolon-separated).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this), result && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: result.error_count ? 'warning' : 'success',\n          children: result.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), result.errors && result.errors.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: \"Errors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: result.errors.map((e, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: `Row ${e.row}: ${e.message}`\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 48\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpload,\n        variant: \"contained\",\n        disabled: !file || loading,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(BulkUploadModal, \"sT7S4lo3ahFI2tke8paaojl3cbY=\");\n_c = BulkUploadModal;\nvar _c;\n$RefreshReg$(_c, \"BulkUploadModal\");","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","Typography","Box","Alert","LinearProgress","axios","jsxDEV","_jsxDEV","defaults","baseURL","BulkUploadModal","open","onClose","onUploaded","_s","file","setFile","loading","setLoading","result","setResult","error","setError","handleFileChange","e","target","files","handleUpload","formData","FormData","append","token","localStorage","getItem","res","post","headers","Authorization","data","err","_err$response","_err$response$data","response","message","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","mb","type","accept","onChange","mt","severity","error_count","summary","errors","length","map","i","row","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mihirjha/Documents/coding/begining/frontend/src/components/BulkUploadModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Box, Alert, LinearProgress\n} from '@mui/material';\nimport axios from 'axios';\n\n// Set up axios base URL (no CORS/security settings)\naxios.defaults.baseURL = 'http://127.0.0.1:5000/';\n\nexport default function BulkUploadModal({ open, onClose, onUploaded }) {\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setResult(null);\n    setError('');\n  };\n\n  const handleUpload = async () => {\n    if (!file) return;\n    setLoading(true);\n    setError('');\n    setResult(null);\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const token = localStorage.getItem('token');\n      const res = await axios.post('/api/v1/questions/bulk-upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: token ? `Bearer ${token}` : ''\n        },\n      });\n      setResult(res.data);\n      onUploaded();\n    } catch (err) {\n      setError(err.response?.data?.message || 'Bulk upload failed');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>Bulk Upload Questions</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body2\" sx={{ mb: 2 }}>\n          Upload a CSV file with columns: subject_id, topic_id, question_type, content, difficulty, explanation, options (as JSON or semicolon-separated).\n        </Typography>\n        <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\n        {loading && <LinearProgress sx={{ mt: 2 }} />}\n        {error && <Alert severity=\"error\" sx={{ mt: 2 }}>{error}</Alert>}\n        {result && (\n          <Box sx={{ mt: 2 }}>\n            <Alert severity={result.error_count ? 'warning' : 'success'}>\n              {result.summary}\n            </Alert>\n            {result.errors && result.errors.length > 0 && (\n              <Box sx={{ mt: 1 }}>\n                <Typography variant=\"subtitle2\">Errors:</Typography>\n                <ul>\n                  {result.errors.map((e, i) => <li key={i}>{`Row ${e.row}: ${e.message}`}</li>)}\n                </ul>\n              </Box>\n            )}\n          </Box>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n        <Button onClick={handleUpload} variant=\"contained\" disabled={!file || loading}>Upload</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}