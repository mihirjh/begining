{"ast":null,"code":"var _jsxFileName = \"/Users/mihirjha/Documents/coding/begining/frontend/src/components/BulkUploadModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Box, Alert, LinearProgress } from '@mui/material';\nimport axios from 'axios';\n\n// Set up axios interceptor to add JWT token to all requests if present\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default function BulkUploadModal({\n  open,\n  onClose,\n  onUploaded\n}) {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setResult(null);\n    setError('');\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    setLoading(true);\n    setError('');\n    setResult(null);\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const res = await axios.post('/api/v1/questions/bulk-upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setResult(res.data);\n      onUploaded();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Bulk upload failed');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Bulk Upload Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mb: 2\n        },\n        children: \"Upload a CSV file with columns: subject_id, topic_id, question_type, content, difficulty, explanation, options (as JSON or semicolon-separated).\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n        sx: {\n          mt: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this), result && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: result.error_count ? 'warning' : 'success',\n          children: result.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), result.errors && result.errors.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: \"Errors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: result.errors.map((e, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: `Row ${e.row}: ${e.message}`\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 48\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleUpload,\n        variant: \"contained\",\n        disabled: !file || loading,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(BulkUploadModal, \"sT7S4lo3ahFI2tke8paaojl3cbY=\");\n_c = BulkUploadModal;\nvar _c;\n$RefreshReg$(_c, \"BulkUploadModal\");","map":{"version":3,"names":["React","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","Typography","Box","Alert","LinearProgress","axios","jsxDEV","_jsxDEV","defaults","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","BulkUploadModal","open","onClose","onUploaded","_s","file","setFile","loading","setLoading","result","setResult","setError","handleFileChange","e","target","files","handleUpload","formData","FormData","append","res","post","data","err","_err$response","_err$response$data","response","message","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","mb","type","accept","onChange","mt","severity","error_count","summary","errors","length","map","i","row","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mihirjha/Documents/coding/begining/frontend/src/components/BulkUploadModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, Box, Alert, LinearProgress\n} from '@mui/material';\nimport axios from 'axios';\n\n// Set up axios interceptor to add JWT token to all requests if present\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\naxios.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\nexport default function BulkUploadModal({ open, onClose, onUploaded }) {\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setResult(null);\n    setError('');\n  };\n\n  const handleUpload = async () => {\n    if (!file) return;\n    setLoading(true);\n    setError('');\n    setResult(null);\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const res = await axios.post('/api/v1/questions/bulk-upload', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      setResult(res.data);\n      onUploaded();\n    } catch (err) {\n      setError(err.response?.data?.message || 'Bulk upload failed');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>Bulk Upload Questions</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body2\" sx={{ mb: 2 }}>\n          Upload a CSV file with columns: subject_id, topic_id, question_type, content, difficulty, explanation, options (as JSON or semicolon-separated).\n        </Typography>\n        <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\n        {loading && <LinearProgress sx={{ mt: 2 }} />}\n        {error && <Alert severity=\"error\" sx={{ mt: 2 }}>{error}</Alert>}\n        {result && (\n          <Box sx={{ mt: 2 }}>\n            <Alert severity={result.error_count ? 'warning' : 'success'}>\n              {result.summary}\n            </Alert>\n            {result.errors && result.errors.length > 0 && (\n              <Box sx={{ mt: 1 }}>\n                <Typography variant=\"subtitle2\">Errors:</Typography>\n                <ul>\n                  {result.errors.map((e, i) => <li key={i}>{`Row ${e.row}: ${e.message}`}</li>)}\n                </ul>\n              </Box>\n            )}\n          </Box>\n        )}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n        <Button onClick={handleUpload} variant=\"contained\" disabled={!file || loading}>Upload</Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}