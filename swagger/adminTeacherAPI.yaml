openapi: 3.0.0
info:
  title: Admin/Teacher Tools API
  description: RESTful APIs for handling admin and teacher flows (student management, analytics, notifications)
  version: 1.0.0
servers:
  - url: http://localhost:5000/api/v1
    description: Local server

paths:
  /admin/students:
    get:
      summary: Get list of students
      description: Returns a paginated list of students with search and filter options.
      security:
        - bearerAuth: []
      parameters:
        - name: search
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentListResponse'

  /admin/students/{studentId}:
    get:
      summary: Get student details
      description: Returns details for a specific student.
      security:
        - bearerAuth: []
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Student details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResponse'
        404:
          description: Student not found

    put:
      summary: Update student information
      description: Edit student profile information.
      security:
        - bearerAuth: []
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentUpdateRequest'
      responses:
        200:
          description: Student updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResponse'
        404:
          description: Student not found

  /admin/students/{studentId}/assign-test:
    post:
      summary: Assign test to student
      description: Assigns a test to a specific student.
      security:
        - bearerAuth: []
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                test_id:
                  type: integer
                  example: 10
                start_time:
                  type: string
                  format: date-time
                end_time:
                  type: string
                  format: date-time
                attempt_limit:
                  type: integer
      responses:
        200:
          description: Test assigned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Test assigned successfully
        404:
          description: Student or test not found

  /admin/groups:
    get:
      summary: Get list of groups
      description: Returns a list of groups.
      security:
        - bearerAuth: []
      responses:
        200:
          description: List of groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListResponse'

  /admin/groups/{groupId}/assign-test:
    post:
      summary: Assign test to group
      description: Assigns a test to a group of students.
      security:
        - bearerAuth: []
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                test_id:
                  type: integer
                  example: 10
                start_time:
                  type: string
                  format: date-time
                end_time:
                  type: string
                  format: date-time
                attempt_limit:
                  type: integer
      responses:
        200:
          description: Test assigned to group successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Test assigned to group successfully
        404:
          description: Group or test not found

  /admin/analytics:
    get:
      summary: Get analytics dashboard
      description: Returns aggregate analytics for tests, students, or groups.
      security:
        - bearerAuth: []
      parameters:
        - name: test_id
          in: query
          schema:
            type: integer
        - name: student_id
          in: query
          schema:
            type: integer
        - name: group_id
          in: query
          schema:
            type: integer
        - name: date_from
          in: query
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          schema:
            type: string
            format: date
      responses:
        200:
          description: Analytics data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsDashboardResponse'

  /admin/notifications:
    post:
      summary: Send notification
      description: Send a notification to students or groups.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        200:
          description: Notification sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Notification sent successfully

    get:
      summary: Get notification history
      description: Returns a list of sent notifications.
      security:
        - bearerAuth: []
      parameters:
        - name: recipient_id
          in: query
          schema:
            type: integer
        - name: group_id
          in: query
          schema:
            type: integer
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: page_size
          in: query
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: Notification history
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'

  /admin/notifications/{notificationId}/status:
    get:
      summary: Get notification delivery status
      description: Returns delivery/read status for a notification.
      security:
        - bearerAuth: []
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Delivery status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStatusResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    StudentListResponse:
      type: object
      properties:
        students:
          type: array
          items:
            $ref: '#/components/schemas/StudentResponse'
        total:
          type: integer
        page:
          type: integer
        page_size:
          type: integer

    StudentResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        role:
          type: string
        enrollment_number:
          type: string
        status:
          type: string
        assigned_tests:
          type: array
          items:
            type: object
            properties:
              test_id:
                type: integer
              test_name:
                type: string
              status:
                type: string

    StudentUpdateRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        enrollment_number:
          type: string
        status:
          type: string

    GroupListResponse:
      type: object
      properties:
        groups:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              member_count:
                type: integer

    AnalyticsDashboardResponse:
      type: object
      properties:
        summary:
          type: object
          properties:
            total_students:
              type: integer
            total_tests:
              type: integer
            average_score:
              type: number
            top_performers:
              type: array
              items:
                type: object
                properties:
                  student_id:
                    type: integer
                  name:
                    type: string
                  score:
                    type: number
        performance_by_test:
          type: array
          items:
            type: object
            properties:
              test_id:
                type: integer
              test_name:
                type: string
              average_score:
                type: number
              attempts:
                type: integer
        performance_by_group:
          type: array
          items:
            type: object
            properties:
              group_id:
                type: integer
              group_name:
                type: string
              average_score:
                type: number
              attempts:
                type: integer

    NotificationRequest:
      type: object
      properties:
        message:
          type: string
        recipient_ids:
          type: array
          items:
            type: integer
        group_ids:
          type: array
          items:
            type: integer

    NotificationListResponse:
      type: object
      properties:
        notifications:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              message:
                type: string
              sent_at:
                type: string
                format: date-time
              recipients:
                type: array
                items:
                  type: string
              status:
                type: string

    NotificationStatusResponse:
      type: object
      properties:
        notification_id:
          type: integer
        recipients:
          type: array
          items:
            type: object
            properties:
              user_id:
                type: integer
              name:
                type: string
              delivered:
                type: boolean
              read:
                type: boolean